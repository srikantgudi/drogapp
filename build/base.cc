//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "base.h"
#include <drogon/utils/OStringStream.h>
#include <drogon/utils/Utilities.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string base::genText(const DrTemplateData& base_view_data)
{
	drogon::OStringStream base_tmp_stream;
	std::string layoutName{""};
	base_tmp_stream << "<!DOCTYPE html>\n";
	base_tmp_stream << "<html>\n";
	base_tmp_stream << "<head>\n";
	base_tmp_stream << "    <title>";
{
    auto & val=base_view_data["title"];
    if(val.type()==typeid(const char *)){
        base_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        base_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
	base_tmp_stream << "</title>\n";
	base_tmp_stream << "    <script src=\"https://unpkg.com/htmx.org\"></script>\n";
	base_tmp_stream << "    <style>\n";
	base_tmp_stream << "    * {\n";
	base_tmp_stream << "        font-family: Helvetica;\n";
	base_tmp_stream << "        font-weight: 400;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    html {\n";
	base_tmp_stream << "        background-color: #666;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    body {\n";
	base_tmp_stream << "        background-color: whitesmoke;\n";
	base_tmp_stream << "        height: 90vh;\n";
	base_tmp_stream << "        margin: 1vh 5vw;\n";
	base_tmp_stream << "        padding: 0 1rem;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    main {\n";
	base_tmp_stream << "        height: 80%;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    thead {\n";
	base_tmp_stream << "        background-color: #666;\n";
	base_tmp_stream << "        color: beige;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    td {\n";
	base_tmp_stream << "        padding: 0.25rem 0.5rem;\n";
	base_tmp_stream << "    }\n";
	base_tmp_stream << "    </style>\n";
	base_tmp_stream << "</head>\n";
	base_tmp_stream << "<body>\n";
	base_tmp_stream << "    <header>\n";
	base_tmp_stream << "        <h1>Drogon Demo App using C++</h1>\n";
	base_tmp_stream << "        <a hx-get=\"/home\" hx-target=\"#content\">Home</a>\n";
	base_tmp_stream << "        <a hx-get=\"/about\" hx-target=\"#content\">About</a>\n";
	base_tmp_stream << "        <a hx-get=\"/categories\" hx-target=\"#content\">Products</a>\n";
	base_tmp_stream << "    </header>\n";
base_tmp_stream<<"\n";
	base_tmp_stream << "    <main class=\"base\" id=\"content\">\n";
	base_tmp_stream << "        ";
{
    auto & val=base_view_data[""];
    if(val.type()==typeid(const char *)){
        base_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        base_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
base_tmp_stream<<"\n";
	base_tmp_stream << "    </main>\n";
base_tmp_stream<<"\n";
	base_tmp_stream << "    <footer>\n";
	base_tmp_stream << "        <p>footer</p>\n";
	base_tmp_stream << "    </footer>\n";
	base_tmp_stream << "</body>\n";
	base_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(base_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = base_view_data;
auto str = std::move(base_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
